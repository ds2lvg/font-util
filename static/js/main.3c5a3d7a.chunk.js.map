{"version":3,"sources":["store/fontReducer.js","store/store.js","components/FontInput.jsx","components/FontForm.jsx","components/FontList.jsx","components/FontContainer.jsx","App.js","index.js"],"names":["fontReducer","fontstate","type","target","payload","CHANGE_INPUT","RESET_INPUT","initialState","FontContext","createContext","fontNames","size","weight","content","colorCode","Store","props","useReducer","fonts","dispatch","Provider","value","children","FontInput","memo","label","placeholder","ref","useRef","useContext","htmlFor","className","onChange","current","FontForm","formRef","onSubmit","e","preventDefault","reset","FontList","textContent","styling","fontSize","fontWeight","color","map","v","i","familyEN","Object","keys","familyKR","key","style","FontContainer","href","App","spinnerRef","useEffect","setTimeout","console","log","display","document","querySelector","position","version","xmlns","xmlnsXlink","x","y","width","height","viewBox","enableBackground","xmlSpace","id","patternContentUnits","fill","d","transform","xlinkHref","opacity","mask","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3c5a3d7a.chunk.js","sourcesContent":["import { CHANGE_INPUT, RESET_INPUT, initialState } from './store';\n\nexport const fontReducer = (fontstate, {type, target, payload}) => {\n  switch (type) {\n    case CHANGE_INPUT:\n      // console.log(target, payload);\n      if(target) {\n        return {...fontstate, [target]: payload}\n      } else{\n        return payload;\n      }\n\n    case RESET_INPUT:\n      // console.log(\"RESET_INPUT\", fontstate)\n      return initialState;\n\n    default:\n      return;\n  }\n\n}","import React, { createContext, useReducer } from 'react';\nimport { fontReducer } from './fontReducer';\n\nexport const FontContext = createContext();\n\nexport const CHANGE_INPUT = \"CHANGE_INPUT\";\nexport const RESET_INPUT = \"RESET_INPUT\";\n\nexport const fontNames = [\n  {\"notosanskr\": \"노토산스\"},\n  {\"spoqahansans\": \"스포카한산스\"},\n  {\"nanumbarungothic\": \"나눔바른고딕\"},\n  {\"nanumsquare\":\"나눔스퀘어\"},\n  {\"nanumsquareround\":\"나눔스퀘어라운드\"},\n  {\"kopubdotum\":\"코펍돋움\"},\n  {\"kopubbatang\":\"코펍바탕\"},\n  {\"sans-serif\":\"산세리프\"},\n];\n\nexport const initialState = {\n  size: 18,\n  weight: 4,\n  content: \"입력하신 텍스트 내용이 보입니다.\",\n  colorCode: \"#000000\",\n};\n\nconst Store = (props) => {\n  const [fonts, dispatch] = useReducer(fontReducer, initialState);\n\n  return (\n    <FontContext.Provider value={{fonts, dispatch}}> \n      {props.children}\n    </FontContext.Provider>\n  );\n};\n\nexport default Store;","import React, { useRef, useContext, memo } from 'react';\nimport { FontContext, CHANGE_INPUT } from '../store/store';\n\nconst FontInput = memo(({target, label, type, placeholder}) => {\n  const ref = useRef();\n  const { dispatch } = useContext(FontContext);\n\n  const handleChange = () => {\n    dispatch({type: CHANGE_INPUT, target: target, payload: ref.current.value});\n  }\n\n  return (\n    <li>\n      <label htmlFor=\"\">{label}</label>\n      <input type={type} className={\"ipt_\"+type} onChange={handleChange} ref={ref} placeholder={placeholder} />\n    </li>\n  );\n});\n\nexport default FontInput;","import React, { useContext, useRef, memo } from 'react';\nimport FontInput from './FontInput';\nimport { FontContext, RESET_INPUT } from '../store/store';\n\nconst FontForm = memo(() => {\n  const { dispatch, fonts } = useContext(FontContext);\n  const formRef = useRef();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch({type: RESET_INPUT});\n    formRef.current.reset();\n  }\n\n  return (\n    <form onSubmit={handleSubmit} ref={formRef}>\n      <ul className=\"input_wrap\">\n        <FontInput target=\"size\" type=\"number\" label=\"size(px)\" placeholder={fonts.size} />\n        <FontInput target=\"weight\" type=\"number\" label=\"weight(1~9)\" placeholder={fonts.weight} />\n        <FontInput target=\"colorCode\" type=\"color\" label=\"color(#)\" placeholder={fonts.colorCode} />\n        <FontInput target=\"content\" type=\"text\" label=\"content\" placeholder=\"입력하신 텍스트 내용이 보입니다.\" />\n        <li><button className=\"btn_reset\">입력창 초기화</button></li>\n      </ul>\n    </form>\n  );\n});\n\nexport default FontForm;","import React, { useContext } from 'react';\nimport { fontNames, FontContext } from '../store/store';\n\nconst FontList = ({textContent}) => {\n  const {fonts} = useContext(FontContext);\n  // console.log(fonts)\n  const styling = {\n    fontSize: fonts.size+\"px\",\n    fontWeight: fonts.weight*100,\n    color: fonts.colorCode,\n  }\n  return (\n    fontNames.map((v,i) => {\n      const familyEN = Object.keys(v)[0];\n      const familyKR = v[familyEN];\n      return (\n        <ul key={familyEN} className={\"font-list \"+familyEN} style={styling}>\n          <li>안녕하세요 {familyKR}입니다</li>\n          <li className=\"italic\">hello {familyEN}</li>\n          <li>{fonts.content}</li>\n        </ul>\n      );\n    })\n  );\n  \n};\n\nexport default FontList;","import React from 'react';\nimport FontForm from './FontForm';\nimport FontList from './FontList';\n\nconst FontContainer = () => {\n  return (\n    <>\n      <header>\n        <h1 className=\"web_title\">Font Customizing</h1>\n        <FontForm />\n      </header>\n      <div className=\"container\">\n        <FontList />\n      </div>\n      <address>\n        jongmin Kim A.K.A Reinkaos<br />\n        <a href=\"mailto:ds2lvg@gmail.com\">ds2lvg@gmail.com</a>\n      </address>\n    </>\n  );\n};\n\nexport default FontContainer;","import React, { useEffect, useRef } from 'react';\nimport './App.scss';\nimport './fontContainer.scss';\nimport FontContainer from './components/FontContainer';\nimport Store from './store/store';\n// import logo from './resource/images/dbt.jpg';\n\nfunction App() {\n  const spinnerRef = useRef();\n  useEffect(() => {\n    setTimeout(() =>{\n      console.log(\"dom loaded\", spinnerRef.current);\n      spinnerRef.current.style.display=\"none\";\n      document.querySelector('body').style.position=\"static\";\n    },1800)\n  }, []);\n\n  return (\n    <Store>\n      <FontContainer />\n      <div className=\"spinner\" ref={spinnerRef}>\n        <svg\n          className=\"loading\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          x=\"0px\"\n          y=\"0px\"\n          width=\"720px\"\n          height=\"190px\"\n          viewBox=\"0 0 574.558 120\"\n          enableBackground=\"new 0 0 574.558 120\"\n          xmlSpace=\"preserve\"\n        >\n          <defs>\n            <pattern\n              id=\"water\"\n              width=\".25\"\n              height=\"1.1\"\n              patternContentUnits=\"objectBoundingBox\"\n            >\n              <path\n                fill=\"#fff\"\n                d=\"M0.25,1H0c0,0,0-0.659,0-0.916c0.083-0.303,0.158,0.334,0.25,0C0.25,0.327,0.25,1,0.25,1z\"\n              />\n            </pattern>\n\n            <text\n              id=\"text\"\n              transform=\"matrix(1 0 0 1 -8.0684 116.7852)\"\n              fontSize=\"120\"\n            >\n              LOADING\n            </text>\n\n            <mask id=\"text_mask\">\n              <use x=\"0\" y=\"0\" xlinkHref=\"#text\" opacity=\"1\" fill=\"#3498db\" />\n            </mask>\n          </defs>\n\n          <use x=\"0\" y=\"0\" xlinkHref=\"#text\" fill=\"#3498db\" />\n\n          <rect\n            className=\"water-fill\"\n            mask=\"url(#text_mask)\"\n            fill=\"url(#water)\"\n            x=\"-400\"\n            y=\"0\"\n            width=\"1600\"\n            height=\"120\"\n          />\n        </svg>\n      </div>\n    </Store>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}